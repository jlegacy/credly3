@isTest(seeAllData=true) 
public with sharing class testCredlyFutureWeb { /*
	static testMethod void start() {
	 testRequestHTTPMock fakeResponse = new testRequestHTTPMock(200,
                                                 'Complete',
                                                 '{"meta":{"status_code":200,"status":"OK","message":"","more_info":null},"data":{"token":"7dde435cda3b006441d3ded3d9b2f62e4492c96696c2ecc0a7102e084dd4214c106d458d0fb2c4e4fb3ea9f7248e4d8471743bdf1bf85c17d1bfa1ca1ba6138e"}}',
                                                 null);
		Test.setMock(HttpCalloutMock.class, fakeResponse);
        
        CredlyJSONCalls.authenticate(CredlyJSONCalls.getURL() + 'authenticate');
        
        fakeResponse = new testRequestHTTPMock(200,
                                                 'Complete',
                                                 '{"meta":{"status_code":200,"status":"OK","message":"","more_info":null},"data":{"token":"7dde435cda3b006441d3ded3d9b2f62e4492c96696c2ecc0a7102e084dd4214c106d458d0fb2c4e4fb3ea9f7248e4d8471743bdf1bf85c17d1bfa1ca1ba6138e"}}',
                                                 null);
		Test.setMock(HttpCalloutMock.class, fakeResponse);
		
		//CredlyJSONCalls.postCredly(CredlyJSONCalls.getURL()+ 'badges/' + 'a01i00000084HQUAA2', createURL);
    
        CredlyFutureWebCalls.updateBadge('a01i00000084HQUAA2');
       
	}*/
	

}