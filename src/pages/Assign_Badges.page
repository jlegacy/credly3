<apex:page controller="BadgeContactController" action="{!dmlOperation}"> 

 <head>
 <link rel="stylesheet" type="text/css" href="{!$Resource.credlyStyles}" />
  
      
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
         
      <script>
    var $j = jQuery.noConflict();
    $j(document).ready(function () {
     bindRuleSelects();
     
     
     	$j("body").delegate("input[id='selectAll']","click",function(){
     	   $j(".selectedRecipients").each( function() {
			$j(this).attr("checked",false);
			 $j(this).click();
			});
        });


        if ("{!customMessageChecked}" == 'false') {
            $j('.customMessageInput').hide();
        } else {
            $j('.customMessageInput').show();
        }


        //if using the back button then restore selected ids
        if ('{!renderStep2}' && '{!xSelectedIDs}'.trim().length > 0) {
            var ids = '{!xSelectedIDs}';
            var mySplitResult = ids.split(',');

            for (i = 0; i < mySplitResult.length; i++) {
                // set check boxes checked //

                $j('#' + mySplitResult[i]).attr('checked', true);

            }
        }

        //set radio button selected for badge
        $j("input[type='radio']").each(function () {
            if ($j(this).val() == '{!setBadgeSelect}')
            // if ($j(this).val() == $j('#hiddenBadge').val())
            {
                $j(this).attr('checked', true);
            }
        });


        customMessageChecked = $j('#contentWrapper').find("input[id*='customMessageCheckBox']");
        if ((customMessageChecked).attr('checked')) {
            $j('.customMessageInput').show();
        } else {
            $j('.customMessageInput').hide();
        }


        $j("#contentWrapper").delegate("input[type='radio']", "click", function () {
            showContainer();
            var urlString = $j(this).closest('td').next().find('img').attr('src');
            setBadgeID($j(this).val(), urlString);
        });

        $j("#contentWrapper").delegate("input[id*='emailCheckbox']", "click", function () {
            if (this.checked) {
                $j('.customMessageCheckBox').show();
                $j('.customMessageInput').show();
            } else {
                $j('.customMessageCheckBox').hide();
                $j('.customMessageInput').hide();
            }
        });

        $j("#contentWrapper").delegate("input[id*='customMessageCheckBox']", "click", function () {
            if (this.checked) {
                $j('.customMessageInput').show();
            } else {
                $j('.customMessageInput').hide();
            }

        });

        $j("#contentWrapper").delegate("div[class*='sorting']", "click", function () {
            setSort($j(this).attr('id'), $j(this).closest("div[id*='sortDiv']").text());
        });


        attachSorts();

    });
    
    function setSelectedRecipients(){
       var ids = "";
        var mySplitResult;
        var hrefString;
        var splitString;
        var recipient;
         $j(".selectedRecipients").each(function ()
         {
         	recipient = $j(this);
        	$j(this).closest('tr').find('a').each(function () {
            if (recipient.is(':checked')) {
            	hrefString = $j(this).attr('href');
            	splitString = hrefString.split('/');
                ids = ids + splitString[3] + ',';
            }
        });
        });
        
        createRecipientsController(ids);
    }

    function insertDetail() {
        var count = 0;
        //get block of html//
        var y = $j("div[id*='rulesDetails']").find('.pbSubsection:first').html();
        // var y = $j("div[id*='rulesDetails']").find('.pbSubsection:first').find('table:first').html();



        // $j("div[id*='rulesDetails']").append(y);
        $j("div[id*='rulesDetails']").find('.pbSubsection:first').append(y);

        //leave 1 open input
        $j("div[id*='rulesDetails']").find('.detailList').each(function (index) {
            if ($j(this).find("select[id*='ruleFields']").val() === "") {
                count = count + 1;
                if (count > 1) {
                    $j(this).remove();
                }
            }
        });

    }
    
     $j( "table" ).delegate( "img.deleteIcon", "click", function() {
        if ($j('.deleteIcon').length > 1)
        {
       $j(this).closest('table').first().remove();
       addSelectChange();
        }
        });

    function bindRuleSelects() {
        var split;
        $j("#contentWrapper").delegate("select[id*='ruleFields']", "change", function () {
            split = $j(this).val().split(":");
            setDropOperand($j(this), split[1]);
        });
    }

    function getVisualOperand(x) {
        var result;

        switch (x) {

        case 'eq':
            result = 'equals to';
            return result;
            break;

        case 'lt':
            result = 'less than';
            return result;
            break;

        case 'le':
            result = 'less than or equal to';
            return result;
            break;

        case 'gt':
            result = 'greater than';
            return result;
            break;

        case 'ge':
            result = 'greater than or equal to';
            return result;
            break;

        case 'ne':
            result = 'not equal to';
            return result;
            break;

        case 'ct':
            result = 'contains';
            return result;
            break;

        default:
            result = ' ';
            break;


        }
        return result;
    }


    function optionString(options) {
        var optionString;
        var split;
        var baseOptions = '<option value=xxx>yyy</option>';
        var selectOptions = '<option selected value=xxx>yyy</option>';
        var tempOptions;
        var visualOperand;
        var stringTest;

        split = options.split("|");

        for (var i = 0; i < split.length; i++) {
            if (split[i].length === 0) {
                tempOptions = selectOptions;
            } else {
                tempOptions = baseOptions;
            }

            tempOptions = tempOptions.replace("xxx", split[i]);

            if (split[i]) {
                stringTest = split[i];

                visualOperand = getVisualOperand(stringTest);
                tempOptions = tempOptions.replace("yyy", visualOperand);
            } else {
                tempOptions = tempOptions.replace("yyy", split[i]);
            }

            optionString = optionString + tempOptions;
        }

        return optionString;
    }

    function setDropOperand(selector, fieldType) {

        var options, operands;
        switch (fieldType.toLowerCase()) {
        case 'string':
        case 'picklist':
        case 'text':
        case 'textarea':
            operands = '|eq|ct';
            options = optionString(operands);
            break;
        case 'long':
        case 'date':
        case 'datetime':
        case 'decimal':
        case 'double':
        case 'integer':
            operands = 'eq|lt|le|gt|ge|ne';
            options = optionString(operands);
            break;
        case 'boolean':
            operands = '|eq|ne';
            options = optionString(operands);
            break;
        default:
            operands = '|eq|ne';
            options = optionString(operands);
            break;
        }

        var optionPlacement = selector.closest('td').closest('table').find("select[id*='ruleOperands']").find('option').remove().end().append(options);

    }


    function attachSorts() {
        $j("div[id*='sortDiv']").each(function () {
            $j(this).children().remove();
        });

        $j("div[id*='sortDiv']").append('<div id="sortUp" class="sorting"><div class="upImage"></div></div>');
        $j("div[id*='sortDiv']").append('<div id="sortDown" class="sorting"><div class="downImage"></div></div>');

        //remove unneeded  sorts//

        $j("div[id*='sortDiv']").each(function () {
            //  if ($j(this).text() == 'Description')
            //   	{
            //  		$j(this).children().remove();
            //  	}

            if ($j(this).text() == 'Sel') {
                $j(this).children().remove();
            }
            if ($j(this).text() == 'Badge') {
                $j(this).children().remove();
            }
              if ($j(this).text() == 'Recipients') {
                $j(this).children().remove();
            }
        });
    }


    function startUpload() {

        upload();

        setInterval(function () {
            this.window.location.href = window.location.href;
        }, 3000);
    }

    function hideContainer() {
        $j('#loading-container').hide();
        $j('#content-container').hide();
        attachSorts();

    }

    function showContainer() {
        $j('#loading-container').show();
        $j('#content-container').show();
    }


    function refreshScreen() {
        var error = false;

        if ($j('#errorMessages').find('.exceptionText').length !== 0) {
            error = true;
        }

        if (error !== true) {
            setInterval(function () {
                this.window.location.href = window.location.href;
            }, 1000);
        }
    }

    function createMemberBadges(type) {
        showContainer();
        var ids = "";
        var mySplitResult;
        $j("tbody[id*='blockTableCheckboxes']").find('[type=checkbox]').each(function () {
            if ($j(this).is(':checked')) {
                ids = ids + $j(this).attr('id') + ',';
            }
        });

        createMemberBadgesApex(type, ids);
    }

    function setBadgeSelected() {
        var x = $j("select[id*='selected_badge']").val();
        setBadgeID(x);
    }

    function setTestimonial() {
        var x = $j("textarea[id*='testimonial']").val();
        setTestimonialText(x);
    }

    function addSelectChange() {


        //string the rules into a text field with delimiters//

        //capture all values 
        var ruleFields = $j("select[id*='ruleFields']");
        var ruleOperands = $j("select[id*='ruleOperands']");
        var ruleInputs = $j("input[id*='ruleInputs']");
        var ruleText = "";

        $j("select[id*='ruleFields']").each(function (index) {

            //only count full full row//
            if (($j(this).val().length) > 0 && ($j(ruleOperands[index]).val().length > 0) && ($j(ruleInputs[index]).val().length > 0)) {
                if (ruleText.length > 0) {
                    ruleText = ruleText + '~' + $j(this).val() + '|' + $j(ruleOperands[index]).val() + '|' + $j(ruleInputs[index]).val();
                } else {
                    ruleText = $j(this).val() + '|' + $j(ruleOperands[index]).val() + '|' + $j(ruleInputs[index]).val();
                }
            }


        });

        setRuleText(ruleText);

    }
</script>
    </head>
    
    <style type="text/css">
        .exceptionText
        { 
            font-style:italic;
            font-size:16px; 
            font-weight:normal; 
            text-align:left;
            color:red;
        }
        .radioColumn
        {
        margin-left: 10px;
        width:50px;
        }
   .content-container {
 	position: fixed;
	top: 50%;
	left: 50%;
	margin-top: 61px;
	margin-left: -43px;
	font-size: 25px;
	display:none;
  }
    .loading-container {
    z-index:100;
	position:absolute;
	top:0;
 	right:0;
	bottom:0;
	left:0;
	display:none;
	background-image:url({!$Resource.ajaxloader});
	background-repeat:no-repeat;
	background-attachment:fixed;
	background-position:center; 
}
.loading-container:before {
	z-index:100;
	position:absolute;
	width:100%;
	height:100%;
	line-height:480px;
	text-align: center;
	vertical-align: middle;
	font-size:25px;
	font-weight:bold;
	color:black;
	text-align:center;
	background:rgba(70, 70, 70, 0.9);
	-webkit-border-radius: 5px;
	-moz-border-radius: 5px;
	border-radius: 5px;
	content: ' ';
	opacity:0.4;
	filter:alpha(opacity=40);
	padding-top: 89px;
}
  
        
    </style>
    
  
    
      <div id="errorMessages">
            <apex:messages id="messages" styleClass="exceptionText"/>
        </div>
        
             
           <div id="loading-container" class="loading-container"></div>
	<div id="content-container" class="content-container">Loading</div>
        
    
         <apex:form id="imageForm" >
    
         
           <apex:sectionHeader title="Issue Badge"/>
      
         
          <input class="hidden" id="hiddenBadge" value="{!setBadgeSelect }"></input>
         
        <apex:pageBlock mode="edit" rendered="{!renderStep1}" >
         <apex:pageBlockSection columns="4" collapsible="false" title="Issuing a badge to one or more Salesforce contacts, leads or contacts is easy. You’ll choose a badge to issue, select your recipients, add optional evidence and testimonial, and choose your notification options. Don’t yet have a badge to issue? Create one now." /> 
         
         </apex:pageBlock>
         
          <apex:actionFunction name="createRecipientsController" action="{!createRecipientsController}" rerender="dummy" oncomplete="hideContainer();">
           <apex:param name="secondParam"  assignTo="{!xSelectedRecipients}" value="" />
              </apex:actionFunction>
         
           <apex:actionFunction name="setRuleText"  rerender="dummy">
      <apex:param name="firstParam"  assignTo="{!setRuleText }" value="" />
    </apex:actionFunction>
        
             <apex:actionFunction name="createMemberBadgesApex" action="{!createMemberBadgesApex}" rerender="dummy" oncomplete="hideContainer();">
           <apex:param name="firstParam"  assignTo="{!xRecordType}" value="" /> 
           <apex:param name="secondParam"  assignTo="{!xSelectedIDs}" value="" /> 
              </apex:actionFunction>
             <apex:actionFunction name="setBadgeID" action="{!setBadgeIdEmpty}" rerender="showNext" oncomplete="hideContainer();">
           <apex:param name="firstParam"  assignTo="{!setBadgeSelect }" value="" /> 
           <apex:param name="secondParam"  assignTo="{!setBadgeSelectImage }" value="" />
              </apex:actionFunction>
              
                  <apex:actionFunction name="setSort" action="{!setSortController}" rerender="badgeDetailsBlock" onComplete="attachSorts();">
           <apex:param name="firstParam"  assignTo="{!xSortDirection}" value="" /> 
           <apex:param name="secondParam"  assignTo="{!xSortField}" value="" />  
           </apex:actionFunction> 
           
             <apex:actionFunction name="setTestimonialText" action="{!setTestimonialEmpty}" rerender="dummy">
           <apex:param name="firstParamx" assignTo="{!setTestimonialSelect}"  value="" />
        </apex:actionFunction>
        
              <apex:actionFunction action="{!reloadFields}" name="reloadFields"  rerender="rulesDetails">
    </apex:actionFunction> 
        
        <apex:outputPanel id="dummy" rendered="false"></apex:outputPanel>
        
         <apex:pageBlock id="uploadEvidence" rendered="{!renderStep4}">   
  		<h1>Step 4: Select Delivery Options:</h1>
  		  <apex:commandButton styleClass="backStep" value="Back Step" action="{!backStep}"/> 
  		  <apex:commandButton styleClass="nextStep" value="Next Step" action="{!nextStep}"/> 
          
  		<apex:pageBlockSection >
    <br><h2>Would you like to notify recipients by email?</h2></br>
    </apex:pageBlockSection>
    
    <apex:pageBlockSection columns="2" >
    <apex:pageBlockSectionItem >
     <apex:inputCheckbox id="emailCheckbox" value="{!emailChecked}"/><apex:outputlabel > Yes, send email notification (recommended)</apex:outputlabel>
     </apex:pageBlockSectionItem>
      </apex:pageBlockSection>
      
    <apex:outputpanel styleClass="customMessageCheckBox" >
    <apex:pageBlockSection columns="2"  >
    <apex:pageBlockSectionItem >
     <apex:inputCheckbox id="customMessageCheckBox" value="{!customMessageChecked}"/><apex:outputlabel > Include custom message?  (This appears in the mail notification to badge recipients)</apex:outputlabel>
     </apex:pageBlockSectionItem>
     </apex:pageBlockSection>
     </apex:outputpanel>
     
      <apex:outputpanel styleClass="customMessageInput" >
     <apex:pageBlockSection columns="2"  >
     <apex:pageBlockSectionItem >
      <apex:outputlabel >&nbsp;</apex:outputlabel><apex:inputTextarea value="{!customMessage}" styleClass="longInputText"></apex:inputTextarea>
       </apex:pageBlockSectionItem>
     </apex:pageBlockSection>
     </apex:outputpanel>
     
      
     
     <apex:pageBlock >
     
  		 
  		 <apex:pageBlockSection columns="2">
  		 
  		 
  		 <apex:outputpanel >
  		  <br><h2>Include Evidence (Optional)</h2></br>
  		 <br><h3>The link or file you attach will be included with every badge
  		 issued as evidence of the recipient's achievement.
        </h3></br>
        
        <br><h3>Enter a URL: http://
        <apex:inputText value="{!urlLink}"></apex:inputText> 
        </h3></br>
        <apex:outputLabel value="- or -" for="file"/> 
       
      
        <apex:inputFile value="{!document.body}" filename="{!document.name}" id="fileEvidence"/>
      
      
  		 </apex:outputpanel>
  		 
  		  <apex:outputpanel >
  		   
       <br><h2>Include Testimonial (Optional)</h2></br>
       <br></br>
        <br><h3>The testimonial you include here will be included
        with every badge.  Tell the world why this person deserves this badge
        (Tip: Avoid using names or pronouns, since you may not know in
        advance specifically who will earn this badge.)
        </h3></br>
        <br></br>
  		
  		 <apex:inputTextarea id="testimonial" value="{!setTestimonialSelect}" styleClass="longInputText"/> 
  		
  	
  		 
  		 </apex:outputpanel>
  		 </apex:pageBlockSection>
  		 
  		
           
    </apex:pageBlock> 
    
  </apex:pageBlock> 
  
  <apex:pageBlock rendered="{!renderStep5}">
  <apex:pageBlockButtons >
                  <apex:commandButton styleClass="backStep" action="{!backStep}" value="Back Step"/> 
                  <apex:commandButton styleClass="nextStep" action="{!upload}" value="Issue Now"/>
            </apex:pageBlockButtons>
  <h1>Step 5: Review</h1>
  <!-- **********************ROW1*************************** -->
  <apex:pageBlockSection columns="2">
  <apex:outputpanel >
  <apex:outputlabel >
  	You are about to send the badge:
  	<br><h1 class="badgeText">{!setBadgeSelectTitle}</h1></br>
  </apex:outputlabel>
  </apex:outputpanel>
  
   <apex:outputpanel >
 <apex:image value="{!setBadgeSelectImage}" width="100" height="100"> </apex:image>
  </apex:outputpanel>
  
  </apex:pageBlockSection>
   <!-- **********************ROW2*************************** -->
  <apex:pageBlockSection columns="2">
  <apex:outputpanel >
  <apex:outputlabel >
  	Number of Recipients:
  </apex:outputlabel>
  </apex:outputpanel>
  
   <apex:outputpanel >
  <apex:outputlabel >
   <apex:outputtext value="{!recipientNumber}" ></apex:outputtext>
  </apex:outputlabel>
  </apex:outputpanel>

    </apex:pageBlockSection>
  <!-- **********************ROW3*************************** -->
  <apex:pageBlockSection columns="2">
  <apex:outputpanel >
  <apex:outputlabel >
  	Evidence:
  </apex:outputlabel>
  </apex:outputpanel>
  
   <apex:outputpanel >
  	 <apex:outputtext value="{!document.Name}" >
  </apex:outputtext>
  </apex:outputpanel>

    </apex:pageBlockSection>
  <!-- **********************ROW4*************************** -->
  <apex:pageBlockSection columns="2">
  <apex:outputpanel >
  <apex:outputlabel >
  	Testimonial:
  </apex:outputlabel>
  </apex:outputpanel>
  
   <apex:outputpanel >
  <apex:outputtext value="{!setTestimonialSelect}" >
  </apex:outputtext>
  </apex:outputpanel>

    </apex:pageBlockSection>
  <!-- **********************ROW5*************************** -->
  <apex:pageBlockSection columns="2">
  <apex:outputpanel >
  <apex:outputlabel >
  	Include notification email:
  </apex:outputlabel>
  </apex:outputpanel>
  
   <apex:outputpanel >
  
  	<apex:outputtext value="{!emailChecked}" >
  </apex:outputtext>
  </apex:outputpanel>

    </apex:pageBlockSection>
  <!-- **********************ROW6*************************** -->
  <apex:pageBlockSection columns="2">
  <apex:outputpanel >
  <apex:outputlabel >
  	Email Template:
  </apex:outputlabel>
  </apex:outputpanel>
  
   <apex:outputpanel >
  <apex:outputlabel >
  	default
  </apex:outputlabel>
  </apex:outputpanel>
  
    </apex:pageBlockSection>
 
  </apex:pageBlock>
    <apex:pageBlock rendered="{!renderStep3}">
     <input type="button" class="btn selectAll" id="selectAll" value="Select All"></input> 
    <h1>Step 3: Select Recipients:</h1>
    
     <apex:pageBlockButtons >
                  <apex:commandButton styleClass="backStep" action="{!backStep}" value="Back Step"/>
                  <apex:commandButton styleClass="nextStep" action="{!nextStep}" value="Next Step"/> 
  
            </apex:pageBlockButtons>
   
   
     <h1>Recipients</h1>
    <apex:outputPanel id="details"> 
    				
                  <apex:pageBlockTable value="{!recipients}" var="o">
                   
                   <apex:column headerValue="Sel">
                   
                  <input class="selectedRecipients" onclick="setSelectedRecipients();" type="checkBox"></input>
                  </apex:column>
                  
                    <apex:column headerValue="Recipients">
                       <apex:outputField value="{!o.Account_Lookup_rc__c}" /> 
                       <apex:outputField value="{!o.Contact_Lookup_rc__c}" /> 
                        <apex:outputField value="{!o.Lead_Lookup_rc__c}" /> 
                    </apex:column>
           
                    </apex:pageBlockTable>
            </apex:outputPanel>
    </apex:pageBlock>
   
     <apex:pageBlock rendered="{!renderStep6}">
    <h1>Congratulations!</h1>
    <br><h3>Your badge has been queued for delivery.  It may take up to a few minutes to reach recipients
        </h3></br>
  <!-- **********************ROW1*************************** -->
  <apex:pageBlockSection >
  
  <div id="container">
  <div class="leftColumn"><img src="{!setBadgeSelectImage}" width="100" height="100"> </img></div>
  <div class="rightColumn"><h1 class="badgeText">{!setBadgeSelectTitle}</h1></div>
 <div class="clear"></div>
  </div>
  </apex:pageBlockSection>
 
  </apex:pageBlock>
   
  
   <apex:pageBlock rendered="{!renderStep1}" id="showNext">
   <h1>Step 1: Select the badge you would like to issue</h1>
    <apex:commandButton styleClass="nextStep" value="Next Step" action="{!nextStep}"/> 
           
   </apex:pageBlock>
  
   <apex:pageBlock id="badgeDetailsBlock" rendered="{!renderStep1}">
       <apex:outputLabel styleClass="smallGreen" >Page {!currentBadgePage} of {!numberOfBadgePages} </apex:outputLabel>
        <br></br>
         <apex:outputLabel styleClass="smallGreen" >{!totalNumberofBadges} Total Records</apex:outputLabel> 
          
        <apex:commandButton action="{!prevBadge}" value="Prev" id="PrevButton" rerender="badgeDetailsBlock" oncomplete="attachSorts();"/> 
        <apex:commandButton action="{!nextBadge}" value="Next" id="nextButton" rerender="badgeDetailsBlock" oncomplete="attachSorts();"/>
  <apex:pageBlockSection >
   <apex:pageBlockSectionItem >
    <apex:outputtext >Need a new Credly badge?</apex:outputtext>
   <apex:outputLink value="/apex/ViewBadges?gotoAdd=Y" id="theLink">Create one now.</apex:outputLink>
   </apex:pageBlockSectionItem>
  <apex:pageBlockSectionItem >
  <apex:inputText label="Name Contains" value="{!filterBadge}" /> 
  <apex:commandButton value="Search for a Badge" onclick="showContainer()" action="{!searchBadge}" rerender="badgeDetailsBlock" oncomplete="hideContainer();" />
  </apex:pageBlockSectionItem>
  </apex:pageBlockSection>
       
                 <apex:outputPanel id="details">
                  <apex:pageBlockTable value="{!badges}" var="o">
                   <apex:column headerValue="Sel">
                  <input class="badgeRadios" type="radio" value="{!o.id}" name="group1"></input>
                  
                  </apex:column>
                  
                    <apex:column headerValue="Badge">
                       <apex:outputField value="{!o.image__c}" /> 
                       
                    </apex:column>
                   <apex:column headerValue="Title">
                       
                         <apex:outputLink value="/{!o.id}"> <apex:outputField value="{!o.title__c}" /> </apex:outputLink>
                    </apex:column>
                     <apex:column headerValue="Description">
                        <apex:outputField value="{!o.description__c}" />
                    </apex:column>
                   
                       <apex:column headerValue="ID">
                        <apex:outputField value="{!o.credlyBadgeId__c}" /> 
                         
                    </apex:column>
                    
                         <apex:column headerValue="Created Date">
                        <apex:outputField value="{!o.credlyCreatedDateTime__c}"/> 
                    </apex:column>
                    
                    </apex:pageBlockTable>
            </apex:outputPanel>

       <apex:outputLabel styleClass="smallGreen" >Page {!currentBadgePage} of {!numberOfBadgePages} </apex:outputLabel>
        <br></br>
         <apex:outputLabel styleClass="smallGreen" >{!totalNumberofBadges} Total Records</apex:outputLabel>
          
        <apex:commandButton action="{!prevBadge}" value="Prev" id="PrevButton2" rerender="badgeDetailsBlock" oncomplete="attachSorts();"/> 
        <apex:commandButton action="{!nextBadge}" value="Next" id="nextButton2" rerender="badgeDetailsBlock" oncomplete="attachSorts();"/>
  </apex:pageBlock>
  
   <apex:pageBlock rendered="{!renderStep2}" title="Step 2: Enter Rule Information">
    <!--  <h1>Step 2: Select Recipient(s)</h1> -->
    <!--         <apex:commandButton styleClass="backStep" value="Back Step" action="{!backStep}"/> --> 
    <!--  <br><h2>To whom would you like to issue this badge? Choose one or more contacts, leads or accounts below, and then click “Continue”.</h2></br> -->
    <!--  <apex:pageBlock id="theAddBadge" rendered="{!renderStep3}" mode="edit"  title="Step 2: Enter Rule Information"> -->
     
      <apex:pageBlockButtons >
         <apex:commandButton styleClass="backStep" value="Back Step" action="{!backStep}"/> 
          <apex:commandButton styleClass="nextStep" value="Next Step" action="{!nextStep}"/> 
      </apex:pageBlockButtons>
      

      <apex:pageBlockSection >
        <apex:pageBlockSectionItem >
          <apex:outputLabel styleClass="ruleLabel" value="Record Type:  "/>
          <apex:selectList id="selected_type" value="{!populateRecordType}" onchange="reloadFields();" multiselect="false" size="1">
            <apex:selectOptions value="{!recordTypes}"/>
          </apex:selectList>
        </apex:pageBlockSectionItem>
      </apex:pageBlockSection>
      
      <apex:pageBlockSection collapsible="false" title="Rules" >
       </apex:pageBlockSection>
       
        <apex:pageBlockSection >
        <apex:commandButton value="Insert New Rule Line" onclick="insertDetail();" rerender="false"/>
       </apex:pageBlockSection>
      
      <apex:pageBlockSection id="rulesDetails" columns="5">
      <img border="0" class="icon deleteIcon" src="{!$Resource.delete_icon}" alt="HTML tutorial" width="15" height="15"></img>
         <apex:selectList styleClass="ruleFieldsSelect" id="ruleFields" onchange="addSelectChange();"  multiselect="false" size="1"  >
            <apex:selectOptions value="{!getRuleFields}"  />
            </apex:selectList>
             <apex:selectList styleClass="operandsSelect" id="ruleOperands" onchange="addSelectChange();" multiselect="false" size="1" >
            <apex:selectOptions value="{!getOperandTypes}"  />
            </apex:selectList>
            <apex:inputText styleClass="inputsSelect" id="ruleInputs" onkeyup="addSelectChange();" ></apex:inputText>
             <apex:outputLabel styleClass="andSelect">and</apex:outputLabel>
             
       </apex:pageBlockSection> 
     
       
    </apex:pageBlock>
  <!--  </apex:pageBlock> --> 
    
   <apex:pageBlock id="showDetailsContacts" title="Contacts" rendered="{!renderContacts}">
   
     <apex:pageBlockButtons >
        
        <apex:commandButton action="{!showUploadOnly}"   styleClass="nextStep" value="Next Step"/>
     
      </apex:pageBlockButtons>
    
   <apex:outputPanel id="contacts"> 
                <apex:pageBlockTable id="blockTableCheckboxesContacts" value="{!contacts}"
                var="con">
                    <apex:column headerValue="Select">
                           <input class="contactCheckbox" type="checkbox" id="{!con.Id}" onclick="createMemberBadges('contact');" />
                    </apex:column>
                    <apex:column headerValue="Name">
                       <apex:outputLink value="/{!con.id}"> <apex:outputField value="{!con.Name}" /></apex:outputLink> 
                    </apex:column>
                     <apex:column headerValue="Email">
                       <apex:outputField value="{!con.email}" /> 
                    </apex:column>
                </apex:pageBlockTable>
            </apex:outputPanel>
  </apex:pageBlock>
  
  <apex:pageBlock id="showDetailsAccounts" title="Accounts" rendered="{!renderAccounts}">
  
                <apex:pageBlockButtons >
               
       
        <apex:commandButton action="{!showUploadOnly}" styleClass="nextStep" value="Next Step"/>
        
      
      </apex:pageBlockButtons>

        <apex:outputPanel id="accounts">
                <apex:pageBlockTable id="blockTableCheckboxesAccounts" title="Accounts" value="{!accounts}"
                var="account">
                    <apex:column headerValue="Select">
                        <input class="accountCheckbox" type="checkbox" id="{!account.Id}" onclick="createMemberBadges('account');" />
                    </apex:column>
                    <apex:column headerValue="Name">
                        <apex:outputLink value="/{!account.id}"><apex:outputField value="{!account.Name}" /> </apex:outputLink>
                    </apex:column>
                    
                </apex:pageBlockTable>
            </apex:outputPanel>
 
  </apex:pageBlock>
  
   <apex:pageBlock id="showDetailsLeads" title="Leads" rendered="{!renderLeads}">
   
     <apex:pageBlockButtons >
        
        <apex:commandButton action="{!showUploadOnly}"  styleClass="nextStep" value="Next Step"/>
      </apex:pageBlockButtons>
    
   <apex:outputPanel id="leads">
                <apex:pageBlockTable id="blockTableCheckboxesLeads" value="{!leads}"
                var="con">
                    <apex:column headerValue="Select">
                           <input class="leadCheckbox" type="checkbox" id="{!con.Id}" onclick="createMemberBadges('lead');" />
                    </apex:column>
                    <apex:column headerValue="Name">
                       <apex:outputLink value="/{!con.id}"><apex:outputField value="{!con.Name}" /> </apex:outputLink>
                    </apex:column>
                      <apex:column headerValue="Email">
                       <apex:outputField value="{!con.email}" /> 
                    </apex:column>
                </apex:pageBlockTable>
            </apex:outputPanel>
  </apex:pageBlock>
  
 
  
   
  </apex:form> 

</apex:page>