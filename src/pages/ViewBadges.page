<apex:page controller="CustomBadgeController"  action="{!dmlOperation}"> 
 <link rel="stylesheet" type="text/css" href="{!$Resource.jquerylightnesscss}" />
          
         
    <head>
    
       <link rel="stylesheet" href="//code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css"/>
          <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
          <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
            <link rel="stylesheet" type="text/css" href="{!$Resource.credlyStyles}" />
          
   

        <script>
              var $j = jQuery.noConflict();

              $j(document).ready(function() {
             $j('#my-badge').hide();
            
				$j( "table" ).delegate( "textarea,input", "keyup", function() {
				var size;
				var classString = $j(this).attr('class');
				var n = classString.search("maxSize");
				if (n > 0)
				{
				n = n + 7;
				var size = classString.substring(n, n+3);
				}
				
				if ($j(this).val().length >= size) {
				alert('Maximum Characters: ' + size);
    			$j(this).val($j(this).val().substr(0, size));
  				}

				});
      
          });
          
          
     
          
       
          
          window.addEventListener("message", function(e) {
    if (e.origin === "https://staging.credly.com" && typeof (data = e.data) === "object") {
        var myBadge = document.getElementById("my-badge");

        // Copy data from the badge builder iframe into a local object
        myBadge.imageUrl        = data.image;
        myBadge.iconInfo        = data.iconMetadata;
        myBadge.extraParameters = data.packagedData;
        
        var img = new Image();
		img.src = data.image;

        // Remove the badge builder
        passImageParms(data.image, data.packagedData.iconstub,data.packagedData.icon_id )
                
        $j('#my-badge').hide();
    }
});
          
             function hideContainer()
          {
          $j('#loading-container').hide();
           $j('#content-container').hide();
       
          }
          
           function showContainer()
          {
          $j('#loading-container').show();
            $j('#content-container').show();
          }
                
          
          function showBadge()
          {
          $j('#my-badge').show();
          }
          
          function isNumberKey(evt){
            var charCode = (evt.which) ? evt.which : event.keyCode
            return !(charCode > 31 && (charCode < 48 || charCode > 57));    
            }
            
            function setGiveableJS()
            {
            setGiveable();
            return false;
            }
            
function getAutoValues() {
    var search = $j("input[id*='autocomplete']").val();
    var titleData;
    var titles = [];
    var data = {};
      $j.get( "https://api.credly.com/v0.2/badges/categories?query=" + search.trim() + "&page=1&per_page=5&order_direction=ASC", function( data ) {

    	titleData = data.data;
    	$j.each(titleData, function(i, val)
    	{
    	titles.push(titleData[i].name);
    	});

        });

    $j("input[id*='autocomplete']").autocomplete({
        source: ["test", "test2", "php", "coldfusion", "javascript", "asp", "ruby"]
    });

    $j("input[id*='autocomplete']").autocomplete(
        "option", "source", titles);

}
            
             function setUploadOption(){
        
			setUploadController();

            }
            
            function setImagePicture(){
            setImageController();
            }
            

          function refreshScreen() {
              var error = false;
              
              if($j('#errorMessages').find('.exceptionText').length != 0)
              {
                  error = true;
              }

              if (error != true) {
                  setInterval(function() {
                  this.window.location.href = window.location.href}, 1000);
              }
          }

          function startUpload() {
                     upload();
                     setInterval(function() {
                  this.window.location.href = window.location.href}, 3000);
              }
              
           
                 
        </script>
    </head>
        <style type="text/css">
        .exceptionText
        { 
            font-style:italic;
            font-size:16px; 
            font-weight:normal; 
            text-align:left;
            color:red;
        }
        .radioColumn
        {
        margin-left: 10px;
        width:50px;
        }
   .content-container {
 	position: fixed;
	top: 50%;
	left: 50%;
	margin-top: 61px;
	margin-left: -43px;
	font-size: 25px;
	display:none;
  }
    .loading-container {
    z-index:100;
	position:absolute;
	top:0;
 	right:0;
	bottom:0;
	left:0;
	display:none;
	background-image:url({!$Resource.ajaxloader});
	background-repeat:no-repeat;
	background-attachment:fixed;
	background-position:center; 
}
.loading-container:before {
	z-index:100;
	position:absolute;
	width:100%;
	height:100%;
	line-height:480px;
	text-align: center;
	vertical-align: middle; 
	font-size:25px;
	font-weight:bold;
	color:black;
	text-align:center;
	background:rgba(70, 70, 70, 0.9);
	-webkit-border-radius: 5px;
	-moz-border-radius: 5px;
	border-radius: 5px;  
	content: ' ';
	opacity:0.4;
	filter:alpha(opacity=40);
	padding-top: 89px;
}
        
    </style>
  
    
  <div id="errorMessages"> 
            <apex:messages id="messages" styleClass="exceptionText"/>
  </div>
  
              
           <div id="loading-container" class="loading-container"></div>
	<div id="content-container" class="content-container">Loading</div>
        
 <apex:iframe id="my-badge" frameborder="0" scrolling="no" width="960" height="540" src="https://staging.credly.com/badge-builder/embed/11"/>      
 <apex:form id="addForm" enctype="multipart/form-data">
 
   <apex:sectionHeader title="Credly Badges" rendered="{!detailsBlock}"/>
      <apex:sectionHeader title="Add New Badge" rendered="{!addBlock}"/>
      
         
        <apex:pageBlock mode="edit" rendered="{!detailsBlock}" >
         <apex:pageBlockSection columns="4" collapsible="false" title="Create new badges or edit existing ones. Additions and changes you make here will be reflected automatically in your Credly account. Click the “Add New Badge” button to create a badge, or select a badge below to review and update its details as needed." /> 
         </apex:pageBlock>
         
          <apex:pageBlock mode="edit" rendered="{!addBlock}">
         <apex:pageBlockSection columns="4" collapsible="false" title="Add or edit a badge. When you save your badge it will be ready for issuing from within Salesforce, Credly, or other apps that display your created Credly badges." /> 
         </apex:pageBlock> 
         
          <apex:actionFunction name="setUploadController" action="{!setUploadAction}">
           </apex:actionFunction>
           
              <apex:actionFunction name="setImageController" action="{!setImageAction}">
           </apex:actionFunction>
          
        
           <apex:actionFunction name="passImageParms" action="{!passBadgeImageParms}" rerender="addForm">
           <apex:param name="firstParam"  assignTo="{!xbadgeURL}" value="" /> 
           <apex:param name="secondParam"  assignTo="{!xbadgeName}" value="" />
           <apex:param name="thirdParam"  assignTo="{!xiconId}" value="" />
           </apex:actionFunction>
        
       <apex:actionFunction name="upload" action="{!upload}" rerender="addForm"> </apex:actionFunction>
          <apex:actionFunction action="{!dummy}" name="setGiveable" rerender="dummy"> </apex:actionFunction>
      
     
    <apex:pageBlock id="theAddBadge" rendered="{!addBlock}" title="Describe this Badge">
 
      <apex:pageBlockButtons >
        <apex:commandButton action="{!upload}" value="Save"/>
         <apex:commandButton action="{!closeBadge}" value="Close"/>
      </apex:pageBlockButtons>
      
 
      <apex:pageBlockSection showHeader="false" columns="2" id="block1">
      
       <apex:pageBlockSectionItem >
          <apex:outputLabel value="Title"/>
          <apex:inputText styleClass="width30 maxSize128" value="{!title}" id="title"/>
        </apex:pageBlockSectionItem> 
       
        
        <apex:pageBlockSectionItem >
          <apex:outputLabel value="Short Description"/>
          <apex:inputTextarea styleClass="width30 height50 maxSize128" value="{!short_description}" id="short_description"/>
        </apex:pageBlockSectionItem>
        
       
        <apex:pageBlockSectionItem >
          <apex:outputLabel value="Description"/>
          <apex:inputTextarea styleClass="width30 height50 maxSize500" value="{!description}" id="description"/>
        </apex:pageBlockSectionItem>
        
           <apex:pageBlockSectionItem >
          <apex:outputLabel value="Criteria"/>
          <apex:inputTextarea styleClass="width30 height50 maxSize500" value="{!criteria}" id="criteria"/>
        </apex:pageBlockSectionItem>
        
         
           <apex:pageBlockSectionItem >
             <apex:outputLabel value="Can this badge be given by others on Credly?"/>
         <apex:selectList value="{!is_giveable}" multiselect="false" size="1">
            <apex:selectOptions value="{!giveableTypes}"/> 
        </apex:selectList>

 </apex:pageBlockSectionItem>
 <apex:pageBlockSection columns="3">
          
          <apex:pageBlockSectionItem dataStyleClass="expireNumber" >
          <apex:outputLabel styleClass="expireLabel" value="Expiration (optional)"/>
            <apex:selectList value="{!is_expireNumber}" multiselect="false" size="1">
            <apex:selectOptions value="{!expireNumbers}"/> 
            </apex:selectList>
        </apex:pageBlockSectionItem>
        
           <apex:pageBlockSectionItem dataStyleClass="expirePeriod">
            <apex:selectList value="{!is_expirePeriod}" multiselect="false" size="1">
            <apex:selectOptions value="{!expirePeriods}"/> 
            </apex:selectList>
        </apex:pageBlockSectionItem>
        
        </apex:pageBlockSection>
       
     <apex:pageBlockSection columns="3">
   <apex:pageBlockSectionItem >
             <apex:outputLabel value="Upload Options"/>
         <apex:selectList onChange="setUploadOption();" value="{!upload_option}" multiselect="false" size="1">
            <apex:selectOptions value="{!uploadTypes}"/> 
        </apex:selectList>

 </apex:pageBlockSectionItem>

        <apex:pageBlockSectionItem >
         <apex:image styleClass="imgThumbNail" value="{!xbadgeURL}"></apex:image>
         </apex:pageBlockSectionItem> 
         </apex:pageBlockSection>
         
           <apex:pageBlockSectionItem >
          <apex:outputLabel value="Categories" />
         <apex:inputText onkeyup="getAutoValues();" value="{!categories}" id="autocomplete"/>
          
        </apex:pageBlockSectionItem>
      
           <apex:pageBlockSection columns="4" rendered="{!renderUpload}">
        
           <apex:pageBlockSectionItem rendered="{!renderUpload}">   
       <apex:outputLabel value="Upload Badge" for="{!document.name}"/> 
         <apex:inputFile onchange="setImagePicture();" value="{!document.body}" filename="{!document.name}" id="fileEvidence"/>
         </apex:pageBlockSectionItem>
          <apex:pageBlockSectionItem >
           <h2 class="uploadFileTextPosition">{!document.name}</h2>
         </apex:pageBlockSectionItem>
         </apex:pageBlockSection>
         
        
        <apex:pageBlockSection columns="3" rendered="{!renderBadgeBuilder}">
         <apex:pageBlockSectionItem >
        <apex:outputLabel value="Badge Builder"/>
        <apex:commandButton onClick="showBadge();" value="Badge Builder" id="theAddButton" rerender="addForm"/>
         </apex:pageBlockSectionItem>
     
      <apex:pageBlockSectionItem rendered="{!renderBadgeBuilder}"> 
       <h2 class="badgeFileTextPosition">{!xbadgeName}</h2>  
       </apex:pageBlockSectionItem> 
       </apex:pageBlockSection>  
       
         
 
      </apex:pageBlockSection>
     
        <apex:pageBlockSection rendered="{!renderUpload}" >
        <apex:pageBlockSectionItem >   
       <apex:outputLabel styleClass="smallBrown" value="**Must be a .jpg, .png, or .gif file under 2MB. For best results, use a square .png file with a transparent background, at least 600x600 pixels."/> 
         </apex:pageBlockSectionItem>
         </apex:pageBlockSection>
       
 
    </apex:pageBlock>

        <apex:pageBlock id="detailsBlock" rendered="{!detailsBlock}">
        <apex:outputLabel styleClass="smallGreen" >Page {!currentPage} of {!numberOfPages} </apex:outputLabel>
        <br></br>
         <apex:outputLabel styleClass="smallGreen" >{!totalNumberofRecords} Total Records</apex:outputLabel>
         
        <apex:commandButton action="{!prev}" value="Prev" id="PrevButton" rerender="detailsBlock"/> 
        <apex:commandButton action="{!next}" value="Next" id="nextButton" rerender="detailsBlock"/>
      
       <apex:pageBlockSection >
  <apex:pageBlockSectionItem >
  <apex:inputText label="Name Contains" value="{!filterBadge}" /> 
  <apex:commandButton value="Search for a Badge" onclick="showContainer()" action="{!searchBadge}" rerender="detailsBlock" oncomplete="hideContainer();" />
  </apex:pageBlockSectionItem>
  </apex:pageBlockSection>
  
            <apex:outputPanel id="details">
                  <apex:pageBlockTable value="{!badges}" var="o">
                    <apex:column headerValue="Image">
                          <apex:outputLink value="/{!o.id}"> <apex:outputField value="{!o.image__c}" /></apex:outputLink>
                    </apex:column>  
                   <apex:column headerValue="Title">
                       
                         <apex:outputLink value="/{!o.id}"> <apex:outputField value="{!o.title__c}" /> </apex:outputLink>
                    </apex:column>
                     <apex:column headerValue="Description">
                        <apex:outputField value="{!o.description__c}" />
                    </apex:column>
                   
                       <apex:column headerValue="ID">
                        <apex:outputField value="{!o.credlyBadgeId__c}" />
                         
                    </apex:column>
        </apex:pageBlockTable>
            </apex:outputPanel>
            <apex:pageBlockButtons >
                <apex:commandButton action="{!addBadge}" value="Add" id="theAddButton" reRender="addForm"/>
                
            </apex:pageBlockButtons>
              <apex:outputLabel styleClass="smallGreen" >Page {!currentPage} of {!numberOfPages} </apex:outputLabel>
        <br></br>
         <apex:outputLabel styleClass="smallGreen" >{!totalNumberofRecords} Total Records</apex:outputLabel>
         
        <apex:commandButton action="{!prev}" value="Prev" id="PrevButton2" rerender="detailsBlock"/> 
        <apex:commandButton action="{!next}" value="Next" id="nextButton2" rerender="detailsBlock"/>
        </apex:pageBlock>
     
    </apex:form>
</apex:page>